{%- if not nginx_separate_config %}
worker_processes 4;
worker_rlimit_nofile 40000;
events {
    worker_connections 8192;
    use epoll;
    multi_accept on;
}
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    gzip on;
    gzip_comp_level 4;
    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_vary on;
    gzip_proxied any;
    client_max_body_size 1000m;
{%- endif %}

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

upstream {{ loki_name }}-read {
  {%- for reader in loki_data["readers"] %}
        server {{ reader }} max_fails=1 fail_timeout=10;
  {%- endfor %}
}

upstream {{ loki_name }}-write {
  {%- for writer in loki_data["writers"] %}
        server {{ writer }} max_fails=1 fail_timeout=10;
  {%- endfor %}
}

upstream {{ loki_name }}-cluster {
  {%- for reader in loki_data["readers"] %}
        server {{ reader }} max_fails=1 fail_timeout=10;
  {%- endfor %}
  {%- for writer in loki_data["writers"] %}
        server {{ writer }} max_fails=1 fail_timeout=10;
  {%- endfor %}
}

upstream {{ loki_name }}-query-frontend {
  {%- for query_frontend in loki_data["query_frontends"] %}
        server {{ query_frontend }} max_fails=1 fail_timeout=10;
  {%- endfor %}
}

{%- for server in loki_data["nginx"]["servers"] %}
server {
  listen 80;
  server_name {{ " ".join(server["names"]) }};
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl;
  listen 3100 ssl;
  server_name {{ " ".join(server["names"]) }};

  {%- if "acme_account" in server %}
  ssl_certificate /opt/acme/cert/{{ cert_prefix }}_{{ server["names"][0] }}_fullchain.cer;
  ssl_certificate_key /opt/acme/cert/{{ cert_prefix }}_{{ server["names"][0] }}_key.key;
  {%- else %}
  ssl_certificate {{ server["ssl_cert"] }}; 
  ssl_certificate_key {{ server["ssl_key"] }};
  {%- endif %}
  
  {%- if "auth_basic" in loki_data["nginx"] %}
  auth_basic "Administratorâ€™s Area";
  auth_basic_user_file {{ "/etc/nginx/htpasswd_" ~ loki_name }};
  {%- endif %}

  proxy_connect_timeout       {{ loki_data["nginx"].get("timeout", 300) }};
  proxy_send_timeout          {{ loki_data["nginx"].get("timeout", 300) }};
  proxy_read_timeout          {{ loki_data["nginx"].get("timeout", 300) }};
  send_timeout                {{ loki_data["nginx"].get("timeout", 300) }};

  location = /ring {
      proxy_pass       http://{{ loki_name }}-cluster$request_uri;
  }
  location = /memberlist {
      proxy_pass       http://{{ loki_name }}-cluster$request_uri;
  }
  location = /config {
      proxy_pass       http://{{ loki_name }}-cluster$request_uri;
  }
  location = /metrics {
      proxy_pass       http://{{ loki_name }}-cluster$request_uri;
  }
  location = /ready {
      proxy_pass       http://{{ loki_name }}-cluster$request_uri;
  }
  location = /loki/api/v1/push {
      proxy_pass       http://{{ loki_name }}-write$request_uri;
  }
  location = /loki/api/v1/tail {
     proxy_pass       http://{{ loki_name }}-read$request_uri;
     proxy_set_header Upgrade $http_upgrade;
     proxy_set_header Connection "upgrade";
  }
  location ~ /loki/api/.* {
     proxy_pass       http://{{ loki_name }}-query-frontend$request_uri;
  }
}

server {
  listen 3101 ssl;
  server_name {{ " ".join(server["names"]) }};

  {%- if "acme_account" in server %}
  ssl_certificate /opt/acme/cert/{{ cert_prefix }}_{{ server["names"][0] }}_fullchain.cer;
  ssl_certificate_key /opt/acme/cert/{{ cert_prefix }}_{{ server["names"][0] }}_key.key;
  {%- else %}
  ssl_certificate {{ server["ssl_cert"] }}; 
  ssl_certificate_key {{ server["ssl_key"] }};
  {%- endif %}
  
  proxy_connect_timeout       {{ loki_data["nginx"].get("timeout", 300) }};
  proxy_send_timeout          {{ loki_data["nginx"].get("timeout", 300) }};
  proxy_read_timeout          {{ loki_data["nginx"].get("timeout", 300) }};
  send_timeout                {{ loki_data["nginx"].get("timeout", 300) }};

  location / {
      proxy_pass       http://{{ loki_name }}-read$request_uri;
  }
}
{% endfor %}
{%- if not nginx_separate_config %}
}
{%- endif %}
