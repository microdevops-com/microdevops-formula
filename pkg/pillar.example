# vi: set ft=yaml:

#You can apply specific pkg sub pillar by running:
#salt minion state.apply pkg.[pkg|before_deploy|after_deploy] pillar='{"pkg_filter": "some_name"}'
#It will run only:
#pkg:
#  *some_name*: <- this key (substring match)

# pkg
pkg:
  some_package_group_name: # name of group of states, WARNING: should be unique or dict join will overwrite needed values
    when: 'PKG_PKG' # pkg.pkg will apply that group, when: 'PKG_BEFORE_DEPLOY' - pkg.before_deploy applies, when: 'PKG_AFTER_DEPLOY' - pkg.after_deploy applies
    states:
      - file.managed: # any state name
          '/etc/package1/main.conf': # state will be executed for each key of this level, - name: param is taken from the key if ommited
      - source: 'salt://pkg/package/main.conf' # you can use any params of the state
          '/etc/package1/secondary.conf':
            - contents: |
                xxx
                yyy
                zzz
      - file.directory: # just another example
          '/var/www/.well-known/':
            - makedirs: True
      - cmd.run:
          1: # keys are sorted before execution
            - name: 'compile /etc/package1/main.conf'
            - runas: 'root'
          2:
            - name: 'service package restart'
            - runas: 'root'
  postfix: # change exim to postfix for debian example
    when: 'PKG_PKG'
    states:
      - pkg.installed:
          1:
            - pkgs:
                - postfix
                - bsd-mailx
                - heirloom-mailx
      - pkg.purged:
          1:
            - pkgs:
                - exim4
                - exim4-base
                - exim4-config
                - exim4-daemon-light
      - cmd.run:
          'dpkg --purge exim4 exim4-base exim4-config exim4-daemon-light':
            - runas: root
