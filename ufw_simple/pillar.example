# vi: set ft=yaml:

# ufw_simple
ufw_simple:
  version: '0.35-4' # or 0.36-7.1
  enabled: True
  reset: False # True => reset ufw every time to clear out manual rules (beware: every time state applies fw is disabled for several seconds)
  logging: 'off'
  nat:
    enabled: True
    masquerade:
      rule_1:
        source: '10.0.0.0/16'
        out: 'br0'
      rule_2:
        source: '192.168.0.0/24'
        out: 'br0'
    dnat:
      rule_1:
        daddr: '22.33.44.55'
        dport: '2222'
        from: '11.22.33.44'
        to: '10.0.0.2:22'
        proto: 'tcp'
        in: 'br0'
      rule_2:
        dport: '8080'
        to: '192.168.0.2:80'
        proto: 'tcp'
        in: 'br0'
    snat:
      rule_1:
        dport: '22'
        from: '11.22.33.44'
        to: '10.0.0.2'
        proto: 'tcp'
        out: 'br1'
      rule_2:
        dport: '80'
        to: '192.168.0.2'
        proto: 'tcp'
        out: 'br1'
    redirect:
      rule_1:
        dport: '5555'
        src: '11.22.33.44' # optional
        dst: '11.22.33.44' # optional
        to_ports: '6666'
        proto: 'tcp'
        in: 'br0'
  custom: # directly paste custom iptables rules to before.rules
    nat: | # nat table
      -A POSTROUTING -s 10.0.10.0/24 -o br0 -j MASQUERADE
    filter: | # filter table
      -A FORWARD -s 10.0.0.10/32 -j ACCEPT
      -A FORWARD -d 10.0.0.10/32 -j ACCEPT
  allow: # allow/deny/reject/limit/limit_in/limit_out
    rule_1: # from list to list with to port
      proto: 'tcp'
      from:
        hostname_1: '1.2.3.4'
        hostname_2: '4.3.2.1'
      to:
        hostname_3: '2.3.4.5'
        hostname_4: '5.4.3.2'
      to_port: '8080,8090,6000:6100'
    rule_2: # from any to any with to port
      proto: 'tcp'
      to_port: '3306'
      insert: 1 
    rule_3: # from list to list any traffic
      from: # any if empty
        hostname_1: '1.2.3.4'
        hostname_2: '4.3.2.1'
      to: # any if empty
        hostname_3: '2.3.4.5'
        hostname_4: '5.4.3.2'
  deny:
    rule_1:
      proto: 'tcp'
      from:
        bad_host_1: '3.4.5.6'
      to_port: '80'
      insert: 1 # optionally add insert NUM key
  delete:
    allow:
      rule_2: # from any to any with to port
        proto: 'tcp'
        to_port: '3306'
