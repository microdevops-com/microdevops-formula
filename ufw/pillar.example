# vi: set ft=yaml:

ufw:
  #not_managed: False # optional, don't do any ufw configuration at all
  #disabled: True # optional, explicitly disable ufw on the server, calls `ufw disable`
  loglevel: "off" # off by default, do not remove quotes - otherwise Salt will make False instead of off
  import_ufw_simple: False # import deprecated ufw_simple state pillar
  #forwarding: True # optional, just enable forwarding like with nat, enabling nat does it as well
  allow: # allow/deny/reject/limit
    rule_1: # from list to list with to port
      proto: tcp
      from:
        hostname_1: 1.2.3.4
        hostname_2: 4.3.2.1
      to:
        hostname_3: 2.3.4.5
        hostname_4: 5.4.3.2
      to_port: 8080,8090,6000:6100 # always set proto if you need to_port
    rule_2: # from any to any with to port
      proto: tcp
      to_port: 3306
      insert: 1 # rules with insert key are sorted and added before other rules
    rule_3: # from list to list any traffic
      from: # any if empty
        hostname_1: 1.2.3.4
        hostname_2: 4.3.2.1
      to: # any if empty
        hostname_3: 2.3.4.5
        hostname_4: 5.4.3.2
  deny:
    rule_1:
      proto: tcp
      from:
        bad_host_1: 3.4.5.6
      to_port: 80
      insert: 1 
    rule_2:
      to:
        bad_host_2: 4.5.6.7
      direction: out # optional
  nat:
    #management_disabled: True # optional, do not modify and flush nat table at all
    masquerade:
      rule_1:
        source: 10.0.0.0/16
        out: br0
      rule_2:
        source: 192.168.0.0/24
        out: br0
      rule_3:
        out: br2
    dnat:
      rule_1:
        daddr: 22.33.44.55
        dport: 2222
        from: 11.22.33.44
        to: 10.0.0.2:22
        proto: tcp
        in: br0
      rule_2:
        dport: 8080
        to: 192.168.0.2:80
        proto: tcp
        in: br0
    snat:
      rule_1:
        dport: 22
        from: 11.22.33.44
        to: 10.0.0.2
        proto: tcp
        out: br1
      rule_2:
        dport: 80
        to: 192.168.0.2
        proto: tcp
        out: br1
    redirect:
      rule_1:
        dport: 5555
        src: 11.22.33.44 # optional
        dst: 11.22.33.44 # optional
        to_ports: 6666
        proto: tcp
        in: br0
  custom: # directly paste custom iptables rules to before.rules
    nat: | # nat table
      -A POSTROUTING -s 10.0.10.0/24 -o br0 -j MASQUERADE
    filter: | # filter table, filter table is not flushed, use ufw chains ufw-before-forward, ufw-before-input, ufw-before-output etc otherwise rules will duplicate on apply
      -A ufw-before-forward -s 10.0.0.10/32 -j ACCEPT
      -A ufw-before-forward -d 10.0.0.10/32 -j ACCEPT
    raw_rules: | # add custom rule block to the bottom of the before.rules
      *mangle # example for logging of ipsec traffic
      -F
      -A PREROUTING -m policy --dir in --pol ipsec -j NFLOG --nflog-group 16
      -A POSTROUTING -m policy --dir out --pol ipsec -j NFLOG --nflog-group 16
      COMMIT
  # IMPORTANT! 
  # custom ufw6 rules may not appear in 'iptables-save' output
  # then use 'nft list ruleset instead'
  custom6: # directly paste custom iptables rules to before6.rules
    filter: | # filter table, filter table is not flushed, use ufw chains ufw6-before-forward, ufw6-before-input, ufw6-before-output etc otherwise rules will duplicate on apply
      -I ufw6-before-output -m owner --uid-owner 998 -j DROP
      -I ufw6-before-output -d 2605:ef80::/32 -j ACCEPT
      -I ufw6-before-output -d 2600:1900::/28 -j ACCEPT
      -I ufw6-before-output -d 2404:f340::/32 -j ACCEPT
      -I ufw6-before-output -d 2404:6800::/32 -j ACCEPT
      -I ufw6-before-output -d 2001:4860::/32 -j ACCEPT
      -I ufw6-before-output -o lo -j ACCEPT
      -I ufw6-before-output -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
    raw_rules: | # add custom rule block to the bottom of the before.rules
      *mangle # example for logging of ipsec traffic
      -F
      -A PREROUTING -m policy --dir in --pol ipsec -j NFLOG --nflog-group 16
      -A POSTROUTING -m policy --dir out --pol ipsec -j NFLOG --nflog-group 16
      COMMIT
